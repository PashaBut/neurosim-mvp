"""
üîê –°–µ—Ä–≤–∏—Å —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö

ARCHITECTURE:
- –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
- Privacy by Design –ø—Ä–∏–Ω—Ü–∏–ø—ã
"""

import os
import logging
from cryptography.fernet import Fernet
from app.config import settings

logger = logging.getLogger(__name__)

class DataEncryptor:
    def __init__(self):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —à–∏—Ñ—Ä–æ–≤–∞–ª—å—â–∏–∫–∞
        
        FUTURE: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å HashiCorp Vault –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª—é—á–∞–º–∏
        """
        # TODO: –ü–æ–ª—É—á–∞—Ç—å –∫–ª—é—á –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–ª–∏ Vault
        self.key = os.getenv("ENCRYPTION_KEY")
        if not self.key:
            # –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
            self.key = Fernet.generate_key()
            logger.warning("Using auto-generated encryption key - not for production!")
        
        self.fernet = Fernet(self.key)
        logger.info("DataEncryptor initialized")
    
    def encrypt_text(self, text: str) -> bytes:
        """–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞"""
        try:
            return self.fernet.encrypt(text.encode('utf-8'))
        except Exception as e:
            logger.error(f"Error encrypting text: {str(e)}")
            raise
    
    def decrypt_text(self, encrypted_data: bytes) -> str:
        """–î–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞"""
        try:
            return self.fernet.decrypt(encrypted_data).decode('utf-8')
        except Exception as e:
            logger.error(f"Error decrypting text: {str(e)}")
            raise
    
    def is_ready(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —à–∏—Ñ—Ä–æ–≤–∞–ª—å—â–∏–∫–∞"""
        return bool(self.key)

# –°–∏–Ω–≥–ª—Ç–æ–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä
encryptor = DataEncryptor()
